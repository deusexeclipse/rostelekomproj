services:
  postgres:
    image: postgres:15
    container_name: postgres_local
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_pass
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"   # если занят, можешь поменять на "5433:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis_local
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  backend:
    build:
      context: ./back
    image: hakatons-backend:latest
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_pass
      POSTGRES_DB: app_db

      DATABASE_URL: postgresql+psycopg://app_user:app_pass@postgres:5432/app_db
      ASYNC_DATABASE_URL: postgresql+psycopg://app_user:app_pass@postgres:5432/app_db

      # твоя безопасность и токены
      PASSWORD_MIN_LENGTH: 1
      ACCESS_TOKEN_EXPIRE_MINUTES: 10000000
      SECRET_KEY: lol

      # новое, для CacheService
      REDIS_URL: redis://redis:6379/0

    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  # robot_emulator:
  #    build: ./back/robot_emulator
  #    environment:
  #      API_URL: http://backend:8000
  #      ROBOTS_COUNT: 5
  #      UPDATE_INTERVAL: 10
  #    depends_on:
  #      - backend

  # tests:
  #   build:
  #     context: ./back
  #     dockerfile: Dockerfile
  #   command: >
  #     sh -c "pytest -v --cov=app --cov-branch --cov-report=term-missing"
  #   volumes:
  #     - .:/app
  #   environment:
  #     SECRET_KEY: test
  #     ACCESS_TOKEN_EXPIRE_MINUTES: 30
  #     PASSWORD_MIN_LENGTH: 6
  #     POSTGRES_HOST: postgres
  #     POSTGRES_USER: app_user
  #     POSTGRES_PASSWORD: app_pass
  #     POSTGRES_DB: testdb
  #     ASYNC_DATABASE_URL: postgresql+asyncpg://app_user:app_pass@postgres:5432/testdb
  #   depends_on:
  #     - backend

volumes:
  redisdata:
